/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AttestationStation,
  AttestationStationInterface,
} from "../AttestationStation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "about",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "AttestationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "about",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
        ],
        internalType: "struct AttestationStation.AttestationData[]",
        name: "_attestations",
        type: "tuple[]",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_about",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_val",
        type: "bytes",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50600180600082608081815250508160a081815250508060c0818152505050505060805160a05160c051610fd261006060003960006101ea015260006101c1015260006101980152610fd26000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d50146100815780635eb5ea101461009f578063702b9dee146100bb575b600080fd5b61006b600480360381019061006691906105af565b6100d7565b6040516100789190610692565b60405180910390f35b610089610191565b6040516100969190610709565b60405180910390f35b6100b960048036038101906100b49190610790565b610234565b005b6100d560048036038101906100d0919061090d565b6102a2565b005b600060205282600052604060002060205281600052604060002060205280600052604060002060009250925050508054610110906109ab565b80601f016020809104026020016040519081016040528092919081815260200182805461013c906109ab565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b505050505081565b60606101bc7f00000000000000000000000000000000000000000000000000000000000000006103a7565b6101e57f00000000000000000000000000000000000000000000000000000000000000006103a7565b61020e7f00000000000000000000000000000000000000000000000000000000000000006103a7565b60405160200161022093929190610a64565b604051602081830303815290604052905090565b600082829050905060005b8181101561029c57600084848381811061025c5761025b610aab565b5b905060200281019061026e9190610adf565b61027790610b91565b90506102908160000151826020015183604001516102a2565b8160010191505061023f565b50505050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020908161033b9190610d5a565b50818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d858460405161039a9190610692565b60405180910390a4505050565b6060600082036103ee576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610502565b600082905060005b6000821461042057808061040990610e5b565b915050600a826104199190610ed2565b91506103f6565b60008167ffffffffffffffff81111561043c5761043b6107e2565b5b6040519080825280601f01601f19166020018201604052801561046e5781602001600182028036833780820191505090505b5090505b600085146104fb576001826104879190610f03565b9150600a856104969190610f37565b60306104a29190610f68565b60f81b8183815181106104b8576104b7610aab565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856104f49190610ed2565b9450610472565b8093505050505b919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105468261051b565b9050919050565b6105568161053b565b811461056157600080fd5b50565b6000813590506105738161054d565b92915050565b6000819050919050565b61058c81610579565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000806000606084860312156105c8576105c7610511565b5b60006105d686828701610564565b93505060206105e786828701610564565b92505060406105f88682870161059a565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561063c578082015181840152602081019050610621565b60008484015250505050565b6000601f19601f8301169050919050565b600061066482610602565b61066e818561060d565b935061067e81856020860161061e565b61068781610648565b840191505092915050565b600060208201905081810360008301526106ac8184610659565b905092915050565b600081519050919050565b600082825260208201905092915050565b60006106db826106b4565b6106e581856106bf565b93506106f581856020860161061e565b6106fe81610648565b840191505092915050565b6000602082019050818103600083015261072381846106d0565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107505761074f61072b565b5b8235905067ffffffffffffffff81111561076d5761076c610730565b5b60208301915083602082028301111561078957610788610735565b5b9250929050565b600080602083850312156107a7576107a6610511565b5b600083013567ffffffffffffffff8111156107c5576107c4610516565b5b6107d18582860161073a565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61081a82610648565b810181811067ffffffffffffffff82111715610839576108386107e2565b5b80604052505050565b600061084c610507565b90506108588282610811565b919050565b600067ffffffffffffffff821115610878576108776107e2565b5b61088182610648565b9050602081019050919050565b82818337600083830152505050565b60006108b06108ab8461085d565b610842565b9050828152602081018484840111156108cc576108cb6107dd565b5b6108d784828561088e565b509392505050565b600082601f8301126108f4576108f361072b565b5b813561090484826020860161089d565b91505092915050565b60008060006060848603121561092657610925610511565b5b600061093486828701610564565b93505060206109458682870161059a565b925050604084013567ffffffffffffffff81111561096657610965610516565b5b610972868287016108df565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109c357607f821691505b6020821081036109d6576109d561097c565b5b50919050565b600081905092915050565b60006109f2826106b4565b6109fc81856109dc565b9350610a0c81856020860161061e565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b6000610a4e6001836109dc565b9150610a5982610a18565b600182019050919050565b6000610a7082866109e7565b9150610a7b82610a41565b9150610a8782856109e7565b9150610a9282610a41565b9150610a9e82846109e7565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600082356001606003833603038112610afb57610afa610ada565b5b80830191505092915050565b600080fd5b600080fd5b600060608284031215610b2757610b26610b07565b5b610b316060610842565b90506000610b4184828501610564565b6000830152506020610b558482850161059a565b602083015250604082013567ffffffffffffffff811115610b7957610b78610b0c565b5b610b85848285016108df565b60408301525092915050565b6000610b9d3683610b11565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bc9565b610c108683610bc9565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610c57610c52610c4d84610c28565b610c32565b610c28565b9050919050565b6000819050919050565b610c7183610c3c565b610c85610c7d82610c5e565b848454610bd6565b825550505050565b600090565b610c9a610c8d565b610ca5818484610c68565b505050565b5b81811015610cc957610cbe600082610c92565b600181019050610cab565b5050565b601f821115610d0e57610cdf81610ba4565b610ce884610bb9565b81016020851015610cf7578190505b610d0b610d0385610bb9565b830182610caa565b50505b505050565b600082821c905092915050565b6000610d3160001984600802610d13565b1980831691505092915050565b6000610d4a8383610d20565b9150826002028217905092915050565b610d6382610602565b67ffffffffffffffff811115610d7c57610d7b6107e2565b5b610d8682546109ab565b610d91828285610ccd565b600060209050601f831160018114610dc45760008415610db2578287015190505b610dbc8582610d3e565b865550610e24565b601f198416610dd286610ba4565b60005b82811015610dfa57848901518255600182019150602085019450602081019050610dd5565b86831015610e175784890151610e13601f891682610d20565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6682610c28565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e9857610e97610e2c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610edd82610c28565b9150610ee883610c28565b925082610ef857610ef7610ea3565b5b828204905092915050565b6000610f0e82610c28565b9150610f1983610c28565b9250828203905081811115610f3157610f30610e2c565b5b92915050565b6000610f4282610c28565b9150610f4d83610c28565b925082610f5d57610f5c610ea3565b5b828206905092915050565b6000610f7382610c28565b9150610f7e83610c28565b9250828201905080821115610f9657610f95610e2c565b5b9291505056fea2646970667358221220aa355a58f00c3509073964a6d9ec5d0a4377705bca1ed670f2b1b40e475e8f9e64736f6c63430008110033";

type AttestationStationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationStationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationStation__factory extends ContractFactory {
  constructor(...args: AttestationStationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationStation> {
    return super.deploy(overrides || {}) as Promise<AttestationStation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationStation {
    return super.attach(address) as AttestationStation;
  }
  override connect(signer: Signer): AttestationStation__factory {
    return super.connect(signer) as AttestationStation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationStationInterface {
    return new utils.Interface(_abi) as AttestationStationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationStation {
    return new Contract(address, _abi, signerOrProvider) as AttestationStation;
  }
}
