/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Semver, SemverInterface } from "../Semver";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_major",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_patch",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516106ec3803806106ec8339818101604052810190610032919061008d565b82608081815250508160a081815250508060c081815250505050506100e0565b600080fd5b6000819050919050565b61006a81610057565b811461007557600080fd5b50565b60008151905061008781610061565b92915050565b6000806000606084860312156100a6576100a5610052565b5b60006100b486828701610078565b93505060206100c586828701610078565b92505060406100d686828701610078565b9150509250925092565b60805160a05160c0516105e061010c600039600060a701526000607e01526000605501526105e06000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806354fd4d5014610030575b600080fd5b61003861004e565b60405161004591906102e1565b60405180910390f35b60606100797f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100a27f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100cb7f00000000000000000000000000000000000000000000000000000000000000006100f1565b6040516020016100dd9392919061038b565b604051602081830303815290604052905090565b606060008203610138576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061024c565b600082905060005b6000821461016a5780806101539061040b565b915050600a826101639190610482565b9150610140565b60008167ffffffffffffffff811115610186576101856104b3565b5b6040519080825280601f01601f1916602001820160405280156101b85781602001600182028036833780820191505090505b5090505b60008514610245576001826101d191906104e2565b9150600a856101e09190610516565b60306101ec9190610547565b60f81b8183815181106102025761020161057b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561023e9190610482565b94506101bc565b8093505050505b919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561028b578082015181840152602081019050610270565b60008484015250505050565b6000601f19601f8301169050919050565b60006102b382610251565b6102bd818561025c565b93506102cd81856020860161026d565b6102d681610297565b840191505092915050565b600060208201905081810360008301526102fb81846102a8565b905092915050565b600081905092915050565b600061031982610251565b6103238185610303565b935061033381856020860161026d565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b6000610375600183610303565b91506103808261033f565b600182019050919050565b6000610397828661030e565b91506103a282610368565b91506103ae828561030e565b91506103b982610368565b91506103c5828461030e565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061041682610401565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610448576104476103d2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061048d82610401565b915061049883610401565b9250826104a8576104a7610453565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006104ed82610401565b91506104f883610401565b92508282039050818111156105105761050f6103d2565b5b92915050565b600061052182610401565b915061052c83610401565b92508261053c5761053b610453565b5b828206905092915050565b600061055282610401565b915061055d83610401565b9250828201905080821115610575576105746103d2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b48f2b2577ca660fa28556466967d84e3f3728fd7581acb2769d2d562eba167d64736f6c63430008110033";

type SemverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Semver__factory extends ContractFactory {
  constructor(...args: SemverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _major: PromiseOrValue<BigNumberish>,
    _minor: PromiseOrValue<BigNumberish>,
    _patch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Semver> {
    return super.deploy(
      _major,
      _minor,
      _patch,
      overrides || {}
    ) as Promise<Semver>;
  }
  override getDeployTransaction(
    _major: PromiseOrValue<BigNumberish>,
    _minor: PromiseOrValue<BigNumberish>,
    _patch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_major, _minor, _patch, overrides || {});
  }
  override attach(address: string): Semver {
    return super.attach(address) as Semver;
  }
  override connect(signer: Signer): Semver__factory {
    return super.connect(signer) as Semver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemverInterface {
    return new utils.Interface(_abi) as SemverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Semver {
    return new Contract(address, _abi, signerOrProvider) as Semver;
  }
}
